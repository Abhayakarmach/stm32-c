#pragma once

#include <stdint.h>
#include <stdbool.h>

/**
 * These numbers are offsets that can be used to determine
 * the power on bit of any peripheral using the formula:
 *    power_on_bit = peripheral_id - peripheral_offset
 * This is done so that there are no conflicts in the stm_peripheral_e
 * enum values due to the same bit positions in different registers
 **/
typedef enum
{
  STM_PERIPHERAL_AHB1 = 0,
  STM_PERIPHERAL_AHB2 = 32,
  STM_PERIPHERAL_APB1 = 64,
  STM_PERIPHERAL_APB2 = 96,
} stm_peripheral__bus_e;

typedef enum
{
  STM_PERIPHERAL_GPIOA = STM_PERIPHERAL_AHB1 + 0,
  STM_PERIPHERAL_GPIOB = STM_PERIPHERAL_AHB1 + 1,
  STM_PERIPHERAL_GPIOC = STM_PERIPHERAL_AHB1 + 2,
  STM_PERIPHERAL_GPIOD = STM_PERIPHERAL_AHB1 + 3,
  STM_PERIPHERAL_GPIOE = STM_PERIPHERAL_AHB1 + 4,

  STM_PERIPHERAL_GPIOH = STM_PERIPHERAL_AHB1 + 7,

  STM_PERIPHERAL_CRC = STM_PERIPHERAL_AHB1 + 12,

  STM_PERIPHERAL_DMA1 = STM_PERIPHERAL_AHB1 + 21,
  STM_PERIPHERAL_DMA2 = STM_PERIPHERAL_AHB1 + 22,

  STM_PERIPHERAL_OTGFS = STM_PERIPHERAL_AHB2 + 7,

  STM_PERIPHERAL_TIM2 = STM_PERIPHERAL_APB1 + 0,
  STM_PERIPHERAL_TIM3 = STM_PERIPHERAL_APB1 + 1,
  STM_PERIPHERAL_TIM4 = STM_PERIPHERAL_APB1 + 2,
  STM_PERIPHERAL_TIM5 = STM_PERIPHERAL_APB1 + 3,

  STM_PERIPHERAL_WWDG = STM_PERIPHERAL_APB1 + 11,

  STM_PERIPHERAL_SPI2 = STM_PERIPHERAL_APB1 + 14,
  STM_PERIPHERAL_SPI3 = STM_PERIPHERAL_APB1 + 15,

  STM_PERIPHERAL_USART2 = STM_PERIPHERAL_APB1 + 17,

  STM_PERIPHERAL_I2C1 = STM_PERIPHERAL_APB1 + 21,
  STM_PERIPHERAL_I2C2 = STM_PERIPHERAL_APB1 + 22,
  STM_PERIPHERAL_I2C3 = STM_PERIPHERAL_APB1 + 23,

  STM_PERIPHERAL_PWR = STM_PERIPHERAL_APB1 + 28,

  STM_PERIPHERAL_TIM1 = STM_PERIPHERAL_APB2 + 0,

  STM_PERIPHERAL_USART1 = STM_PERIPHERAL_APB2 + 4,
  STM_PERIPHERAL_USART6 = STM_PERIPHERAL_APB2 + 5,

  STM_PERIPHERAL_ADC1 = STM_PERIPHERAL_APB2 + 8,

  STM_PERIPHERAL_SDIO = STM_PERIPHERAL_APB2 + 11,
  STM_PERIPHERAL_SPI1 = STM_PERIPHERAL_APB2 + 12,
  STM_PERIPHERAL_SPI4 = STM_PERIPHERAL_APB2 + 13,
  STM_PERIPHERAL_SYSCFG = STM_PERIPHERAL_APB2 + 14,

  STM_PERIPHERAL_TIM9 = STM_PERIPHERAL_APB2 + 16,
  STM_PERIPHERAL_TIM10 = STM_PERIPHERAL_APB2 + 17,
  STM_PERIPHERAL_TIM11 = STM_PERIPHERAL_APB2 + 18,

  STM_PERIPHERAL_SPI5 = STM_PERIPHERAL_APB2 + 20
} stm_peripheral_e;

bool stm_peripheral__power_on_peripheral(stm_peripheral_e peripheral, bool low_power_mode);
bool stm_peripheral__is_powered_on(stm_peripheral_e peripheral, bool low_power_mode);